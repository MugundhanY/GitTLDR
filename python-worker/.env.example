# Environment Configuration
NODE_ENV=development

# Processing Mode: "API" or "WORKER"
# API: Direct HTTP processing via api_server.py (no Redis needed, faster for local dev)
# WORKER: Async processing via worker.py with Redis queue (recommended for production)
PROCESSING_MODE=WORKER

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/gittldr

FRONTEND_URL="http://127.0.0.1:3000"
NODE_WORKER_URL="http://127.0.0.1:3001"

# Redis for job queue
REDIS_URL=redis://localhost:6379

# API Keys
GEMINI_API_KEY=your-gemini-api-key
# Multiple Gemini API keys for rotation (comma-separated)
GEMINI_API_KEYS=your-key-1,your-key-2,your-key-3

# Embedding Configuration
# Set to true to use Gemini embeddings (requires API key), false for local model
USE_GEMINI_EMBEDDINGS=false

# Qdrant Vector Database
QDRANT_URL=your-qdrant-cloud-url
QDRANT_API_KEY=your-qdrant-api-key

# Backblaze B2 Storage
B2_APPLICATION_KEY_ID=your-b2-application-key-id
B2_APPLICATION_KEY=your-b2-application-key
B2_BUCKET_NAME=your-b2-bucket-name
B2_ENDPOINT_URL=your-b2-endpoint-url
B2_REGION=your-b2-region

# Queue Configuration
QUEUE_NAME=gittldr_tasks

# Logging
LOG_LEVEL=info

# Redis Optimization Settings
STORE_QNA_RESULTS=true          # Set to false to disable Q&A result storage (reduces writes)
SKIP_INTERMEDIATE_TASK_STATUS=false  # Set to true to skip "processing" status updates (reduces writes by ~50%)
HEALTH_CHECK_CACHE_TTL=30       # Cache health check results for N seconds (reduces Redis pings)

ENABLE_GRAPH_RETRIEVAL=true
ENABLE_MULTI_STEP_RETRIEVAL=true